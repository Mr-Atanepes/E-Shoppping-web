export const addToCart = async (req, res) => {
  const { productId, quantity } = req.body;
  
  // Temporarily bypass user ID check
  // const userId = req.user?.id; // Assuming user ID is available in the request
  const userId = "dummyUserId"; // Replace with a valid user ID for testing

  // Commenting out the unauthorized access check
  // if (!userId) {
  //   return res.status(401).json({ message: "Unauthorized access" });
  // }

  try {
    // Validate product existence
    const product = await Product.findById(productId);
    if (!product) {
      return res.status(404).json({ message: 'Product not found' });
    }

    // Add item to cart logic
    const cart = await Cart.findOne({ userId });
    if (!cart) {
      // Create a new cart if it doesn't exist
      const newCart = new Cart({ userId, items: [{ productId, quantity }] });
      await newCart.save();
    } else {
      // Check if the item already exists in the cart
      const existingItem = cart.items.find(item => item.productId === productId);
      if (existingItem) {
        existingItem.quantity += quantity; // Update quantity
      } else {
        cart.items.push({ productId, quantity }); // Add new item
      }
      await cart.save(); // Save cart
    }

    return res.status(200).json({ message: 'Item added to cart successfully' });
  } catch (error) {
    return res.status(500).json({ message: 'Error adding item to cart', error });
  }
};

// Register User
// export const registerUser = async (req, res) => {
//   const { username, password, email } = req.body;

  // try {
    // Validate inputs
    // if (!username || !password || !email) {
      // return res
        // .status(400)
        // .json({ message: "Username, email, and password are required" });
    // }

    // Check if user already exists by username or email
    // const existingUser = await User.findOne({
      // $or: [{ username }, { email }],
    // });

    // if (existingUser) {
      // return res
        // .status(400)
        // .json({ message: "Username or email already exists" });
    

    // Hash the password
    // const hashedPassword = await bcrypt.hash(password, 10);

    // Create new user
    // const user = new User({
      // username,
      // email,
      // password: hashedPassword, // Save hashed password
    // });

    // Save new user
    // await user.save();

    // // Generate a verification token
    // const verificationToken = generateToken(user._id);

    // // Send verification email
//     await sendVerificationEmail(user.email, verificationToken);

//     // Respond to the client
//     res.status(201).json({
//       message: "User created successfully. Please verify your email.",
//     });
//   } catch (error) {
//     console.error("Registration error:", error.message);
//     res.status(500).json({ message: "User registration failed" });
//   }
// };
